services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-soda_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - soda-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./back
      dockerfile: Dockerfile
      cache_from:
        - golang:1.21-alpine
        - alpine:latest
    environment:
      DB_HOST: postgres
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-soda_db}
      DB_PORT: 5432
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - soda-network
    restart: unless-stopped

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
      cache_from:
        - node:18-alpine
        - nginx:stable-alpine
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - soda-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  soda-network:
    driver: bridge
